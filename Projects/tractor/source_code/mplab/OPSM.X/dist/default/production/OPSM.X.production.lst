

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 16 22:11:30 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.00
    25                           ; Generated 27/05/2018 GMT
    26                           ; 
    27                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1503 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  008C                     	;# 
    85  008E                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010E                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0113                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018E                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0391                     	;# 
   140  0392                     	;# 
   141  0393                     	;# 
   142  0498                     	;# 
   143  0498                     	;# 
   144  0499                     	;# 
   145  049A                     	;# 
   146  049B                     	;# 
   147  049B                     	;# 
   148  049C                     	;# 
   149  049D                     	;# 
   150  049E                     	;# 
   151  049F                     	;# 
   152  0611                     	;# 
   153  0612                     	;# 
   154  0613                     	;# 
   155  0613                     	;# 
   156  0614                     	;# 
   157  0615                     	;# 
   158  0616                     	;# 
   159  0616                     	;# 
   160  0617                     	;# 
   161  0618                     	;# 
   162  0619                     	;# 
   163  0619                     	;# 
   164  061A                     	;# 
   165  061B                     	;# 
   166  061C                     	;# 
   167  061C                     	;# 
   168  0691                     	;# 
   169  0692                     	;# 
   170  0693                     	;# 
   171  0694                     	;# 
   172  0695                     	;# 
   173  0F0F                     	;# 
   174  0F10                     	;# 
   175  0F11                     	;# 
   176  0F12                     	;# 
   177  0F13                     	;# 
   178  0F14                     	;# 
   179  0F15                     	;# 
   180  0F16                     	;# 
   181  0F17                     	;# 
   182  0F18                     	;# 
   183  0F19                     	;# 
   184  0F1A                     	;# 
   185  0F1B                     	;# 
   186  0F1C                     	;# 
   187  0F1D                     	;# 
   188  0F1E                     	;# 
   189  0F1F                     	;# 
   190  0FE3                     	;# 
   191  0FE4                     	;# 
   192  0FE5                     	;# 
   193  0FE6                     	;# 
   194  0FE7                     	;# 
   195  0FE8                     	;# 
   196  0FE9                     	;# 
   197  0FEA                     	;# 
   198  0FEB                     	;# 
   199  0FED                     	;# 
   200  0FEE                     	;# 
   201  0FEF                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000E                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0016                     	;# 
   222  0017                     	;# 
   223  0018                     	;# 
   224  0019                     	;# 
   225  001A                     	;# 
   226  001B                     	;# 
   227  001C                     	;# 
   228  008C                     	;# 
   229  008E                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0097                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009B                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010E                     	;# 
   246  0111                     	;# 
   247  0112                     	;# 
   248  0113                     	;# 
   249  0114                     	;# 
   250  0115                     	;# 
   251  0116                     	;# 
   252  0117                     	;# 
   253  0118                     	;# 
   254  0119                     	;# 
   255  011D                     	;# 
   256  018C                     	;# 
   257  018E                     	;# 
   258  0191                     	;# 
   259  0191                     	;# 
   260  0192                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0197                     	;# 
   267  020C                     	;# 
   268  0211                     	;# 
   269  0211                     	;# 
   270  0212                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0216                     	;# 
   280  0216                     	;# 
   281  0217                     	;# 
   282  0217                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  0498                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  049E                     	;# 
   295  049F                     	;# 
   296  0611                     	;# 
   297  0612                     	;# 
   298  0613                     	;# 
   299  0613                     	;# 
   300  0614                     	;# 
   301  0615                     	;# 
   302  0616                     	;# 
   303  0616                     	;# 
   304  0617                     	;# 
   305  0618                     	;# 
   306  0619                     	;# 
   307  0619                     	;# 
   308  061A                     	;# 
   309  061B                     	;# 
   310  061C                     	;# 
   311  061C                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0F0F                     	;# 
   318  0F10                     	;# 
   319  0F11                     	;# 
   320  0F12                     	;# 
   321  0F13                     	;# 
   322  0F14                     	;# 
   323  0F15                     	;# 
   324  0F16                     	;# 
   325  0F17                     	;# 
   326  0F18                     	;# 
   327  0F19                     	;# 
   328  0F1A                     	;# 
   329  0F1B                     	;# 
   330  0F1C                     	;# 
   331  0F1D                     	;# 
   332  0F1E                     	;# 
   333  0F1F                     	;# 
   334  0FE3                     	;# 
   335  0FE4                     	;# 
   336  0FE5                     	;# 
   337  0FE6                     	;# 
   338  0FE7                     	;# 
   339  0FE8                     	;# 
   340  0FE9                     	;# 
   341  0FEA                     	;# 
   342  0FEB                     	;# 
   343  0FED                     	;# 
   344  0FEE                     	;# 
   345  0FEF                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000E                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  008C                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011D                     	;# 
   400  018C                     	;# 
   401  018E                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0197                     	;# 
   411  020C                     	;# 
   412  0211                     	;# 
   413  0211                     	;# 
   414  0212                     	;# 
   415  0212                     	;# 
   416  0213                     	;# 
   417  0213                     	;# 
   418  0214                     	;# 
   419  0214                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0216                     	;# 
   424  0216                     	;# 
   425  0217                     	;# 
   426  0217                     	;# 
   427  0391                     	;# 
   428  0392                     	;# 
   429  0393                     	;# 
   430  0498                     	;# 
   431  0498                     	;# 
   432  0499                     	;# 
   433  049A                     	;# 
   434  049B                     	;# 
   435  049B                     	;# 
   436  049C                     	;# 
   437  049D                     	;# 
   438  049E                     	;# 
   439  049F                     	;# 
   440  0611                     	;# 
   441  0612                     	;# 
   442  0613                     	;# 
   443  0613                     	;# 
   444  0614                     	;# 
   445  0615                     	;# 
   446  0616                     	;# 
   447  0616                     	;# 
   448  0617                     	;# 
   449  0618                     	;# 
   450  0619                     	;# 
   451  0619                     	;# 
   452  061A                     	;# 
   453  061B                     	;# 
   454  061C                     	;# 
   455  061C                     	;# 
   456  0691                     	;# 
   457  0692                     	;# 
   458  0693                     	;# 
   459  0694                     	;# 
   460  0695                     	;# 
   461  0F0F                     	;# 
   462  0F10                     	;# 
   463  0F11                     	;# 
   464  0F12                     	;# 
   465  0F13                     	;# 
   466  0F14                     	;# 
   467  0F15                     	;# 
   468  0F16                     	;# 
   469  0F17                     	;# 
   470  0F18                     	;# 
   471  0F19                     	;# 
   472  0F1A                     	;# 
   473  0F1B                     	;# 
   474  0F1C                     	;# 
   475  0F1D                     	;# 
   476  0F1E                     	;# 
   477  0F1F                     	;# 
   478  0FE3                     	;# 
   479  0FE4                     	;# 
   480  0FE5                     	;# 
   481  0FE6                     	;# 
   482  0FE7                     	;# 
   483  0FE8                     	;# 
   484  0FE9                     	;# 
   485  0FEA                     	;# 
   486  0FEB                     	;# 
   487  0FED                     	;# 
   488  0FEE                     	;# 
   489  0FEF                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0008                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000E                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  009F                     	;# 
   532  010C                     	;# 
   533  010E                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011D                     	;# 
   544  018C                     	;# 
   545  018E                     	;# 
   546  0191                     	;# 
   547  0191                     	;# 
   548  0192                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0197                     	;# 
   555  020C                     	;# 
   556  0211                     	;# 
   557  0211                     	;# 
   558  0212                     	;# 
   559  0212                     	;# 
   560  0213                     	;# 
   561  0213                     	;# 
   562  0214                     	;# 
   563  0214                     	;# 
   564  0215                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0216                     	;# 
   568  0216                     	;# 
   569  0217                     	;# 
   570  0217                     	;# 
   571  0391                     	;# 
   572  0392                     	;# 
   573  0393                     	;# 
   574  0498                     	;# 
   575  0498                     	;# 
   576  0499                     	;# 
   577  049A                     	;# 
   578  049B                     	;# 
   579  049B                     	;# 
   580  049C                     	;# 
   581  049D                     	;# 
   582  049E                     	;# 
   583  049F                     	;# 
   584  0611                     	;# 
   585  0612                     	;# 
   586  0613                     	;# 
   587  0613                     	;# 
   588  0614                     	;# 
   589  0615                     	;# 
   590  0616                     	;# 
   591  0616                     	;# 
   592  0617                     	;# 
   593  0618                     	;# 
   594  0619                     	;# 
   595  0619                     	;# 
   596  061A                     	;# 
   597  061B                     	;# 
   598  061C                     	;# 
   599  061C                     	;# 
   600  0691                     	;# 
   601  0692                     	;# 
   602  0693                     	;# 
   603  0694                     	;# 
   604  0695                     	;# 
   605  0F0F                     	;# 
   606  0F10                     	;# 
   607  0F11                     	;# 
   608  0F12                     	;# 
   609  0F13                     	;# 
   610  0F14                     	;# 
   611  0F15                     	;# 
   612  0F16                     	;# 
   613  0F17                     	;# 
   614  0F18                     	;# 
   615  0F19                     	;# 
   616  0F1A                     	;# 
   617  0F1B                     	;# 
   618  0F1C                     	;# 
   619  0F1D                     	;# 
   620  0F1E                     	;# 
   621  0F1F                     	;# 
   622  0FE3                     	;# 
   623  0FE4                     	;# 
   624  0FE5                     	;# 
   625  0FE6                     	;# 
   626  0FE7                     	;# 
   627  0FE8                     	;# 
   628  0FE9                     	;# 
   629  0FEA                     	;# 
   630  0FEB                     	;# 
   631  0FED                     	;# 
   632  0FEE                     	;# 
   633  0FEF                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000E                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0015                     	;# 
   652  0016                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001C                     	;# 
   660  008C                     	;# 
   661  008E                     	;# 
   662  0091                     	;# 
   663  0092                     	;# 
   664  0093                     	;# 
   665  0095                     	;# 
   666  0096                     	;# 
   667  0097                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  009F                     	;# 
   676  010C                     	;# 
   677  010E                     	;# 
   678  0111                     	;# 
   679  0112                     	;# 
   680  0113                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0117                     	;# 
   685  0118                     	;# 
   686  0119                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018E                     	;# 
   690  0191                     	;# 
   691  0191                     	;# 
   692  0192                     	;# 
   693  0193                     	;# 
   694  0193                     	;# 
   695  0194                     	;# 
   696  0195                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  020C                     	;# 
   700  0211                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0212                     	;# 
   704  0213                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0215                     	;# 
   711  0216                     	;# 
   712  0216                     	;# 
   713  0217                     	;# 
   714  0217                     	;# 
   715  0391                     	;# 
   716  0392                     	;# 
   717  0393                     	;# 
   718  0498                     	;# 
   719  0498                     	;# 
   720  0499                     	;# 
   721  049A                     	;# 
   722  049B                     	;# 
   723  049B                     	;# 
   724  049C                     	;# 
   725  049D                     	;# 
   726  049E                     	;# 
   727  049F                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0613                     	;# 
   732  0614                     	;# 
   733  0615                     	;# 
   734  0616                     	;# 
   735  0616                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  0619                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061C                     	;# 
   744  0691                     	;# 
   745  0692                     	;# 
   746  0693                     	;# 
   747  0694                     	;# 
   748  0695                     	;# 
   749  0F0F                     	;# 
   750  0F10                     	;# 
   751  0F11                     	;# 
   752  0F12                     	;# 
   753  0F13                     	;# 
   754  0F14                     	;# 
   755  0F15                     	;# 
   756  0F16                     	;# 
   757  0F17                     	;# 
   758  0F18                     	;# 
   759  0F19                     	;# 
   760  0F1A                     	;# 
   761  0F1B                     	;# 
   762  0F1C                     	;# 
   763  0F1D                     	;# 
   764  0F1E                     	;# 
   765  0F1F                     	;# 
   766  0FE3                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE9                     	;# 
   773  0FEA                     	;# 
   774  0FEB                     	;# 
   775  0FED                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000E                     	;# 
   792  0011                     	;# 
   793  0012                     	;# 
   794  0013                     	;# 
   795  0015                     	;# 
   796  0016                     	;# 
   797  0016                     	;# 
   798  0017                     	;# 
   799  0018                     	;# 
   800  0019                     	;# 
   801  001A                     	;# 
   802  001B                     	;# 
   803  001C                     	;# 
   804  008C                     	;# 
   805  008E                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0095                     	;# 
   810  0096                     	;# 
   811  0097                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009B                     	;# 
   816  009C                     	;# 
   817  009D                     	;# 
   818  009E                     	;# 
   819  009F                     	;# 
   820  010C                     	;# 
   821  010E                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011D                     	;# 
   832  018C                     	;# 
   833  018E                     	;# 
   834  0191                     	;# 
   835  0191                     	;# 
   836  0192                     	;# 
   837  0193                     	;# 
   838  0193                     	;# 
   839  0194                     	;# 
   840  0195                     	;# 
   841  0196                     	;# 
   842  0197                     	;# 
   843  020C                     	;# 
   844  0211                     	;# 
   845  0211                     	;# 
   846  0212                     	;# 
   847  0212                     	;# 
   848  0213                     	;# 
   849  0213                     	;# 
   850  0214                     	;# 
   851  0214                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0216                     	;# 
   856  0216                     	;# 
   857  0217                     	;# 
   858  0217                     	;# 
   859  0391                     	;# 
   860  0392                     	;# 
   861  0393                     	;# 
   862  0498                     	;# 
   863  0498                     	;# 
   864  0499                     	;# 
   865  049A                     	;# 
   866  049B                     	;# 
   867  049B                     	;# 
   868  049C                     	;# 
   869  049D                     	;# 
   870  049E                     	;# 
   871  049F                     	;# 
   872  0611                     	;# 
   873  0612                     	;# 
   874  0613                     	;# 
   875  0613                     	;# 
   876  0614                     	;# 
   877  0615                     	;# 
   878  0616                     	;# 
   879  0616                     	;# 
   880  0617                     	;# 
   881  0618                     	;# 
   882  0619                     	;# 
   883  0619                     	;# 
   884  061A                     	;# 
   885  061B                     	;# 
   886  061C                     	;# 
   887  061C                     	;# 
   888  0691                     	;# 
   889  0692                     	;# 
   890  0693                     	;# 
   891  0694                     	;# 
   892  0695                     	;# 
   893  0F0F                     	;# 
   894  0F10                     	;# 
   895  0F11                     	;# 
   896  0F12                     	;# 
   897  0F13                     	;# 
   898  0F14                     	;# 
   899  0F15                     	;# 
   900  0F16                     	;# 
   901  0F17                     	;# 
   902  0F18                     	;# 
   903  0F19                     	;# 
   904  0F1A                     	;# 
   905  0F1B                     	;# 
   906  0F1C                     	;# 
   907  0F1D                     	;# 
   908  0F1E                     	;# 
   909  0F1F                     	;# 
   910  0FE3                     	;# 
   911  0FE4                     	;# 
   912  0FE5                     	;# 
   913  0FE6                     	;# 
   914  0FE7                     	;# 
   915  0FE8                     	;# 
   916  0FE9                     	;# 
   917  0FEA                     	;# 
   918  0FEB                     	;# 
   919  0FED                     	;# 
   920  0FEE                     	;# 
   921  0FEF                     	;# 
   922  0000                     	;# 
   923  0001                     	;# 
   924  0002                     	;# 
   925  0003                     	;# 
   926  0004                     	;# 
   927  0005                     	;# 
   928  0006                     	;# 
   929  0007                     	;# 
   930  0008                     	;# 
   931  0009                     	;# 
   932  000A                     	;# 
   933  000B                     	;# 
   934  000C                     	;# 
   935  000E                     	;# 
   936  0011                     	;# 
   937  0012                     	;# 
   938  0013                     	;# 
   939  0015                     	;# 
   940  0016                     	;# 
   941  0016                     	;# 
   942  0017                     	;# 
   943  0018                     	;# 
   944  0019                     	;# 
   945  001A                     	;# 
   946  001B                     	;# 
   947  001C                     	;# 
   948  008C                     	;# 
   949  008E                     	;# 
   950  0091                     	;# 
   951  0092                     	;# 
   952  0093                     	;# 
   953  0095                     	;# 
   954  0096                     	;# 
   955  0097                     	;# 
   956  0099                     	;# 
   957  009A                     	;# 
   958  009B                     	;# 
   959  009B                     	;# 
   960  009C                     	;# 
   961  009D                     	;# 
   962  009E                     	;# 
   963  009F                     	;# 
   964  010C                     	;# 
   965  010E                     	;# 
   966  0111                     	;# 
   967  0112                     	;# 
   968  0113                     	;# 
   969  0114                     	;# 
   970  0115                     	;# 
   971  0116                     	;# 
   972  0117                     	;# 
   973  0118                     	;# 
   974  0119                     	;# 
   975  011D                     	;# 
   976  018C                     	;# 
   977  018E                     	;# 
   978  0191                     	;# 
   979  0191                     	;# 
   980  0192                     	;# 
   981  0193                     	;# 
   982  0193                     	;# 
   983  0194                     	;# 
   984  0195                     	;# 
   985  0196                     	;# 
   986  0197                     	;# 
   987  020C                     	;# 
   988  0211                     	;# 
   989  0211                     	;# 
   990  0212                     	;# 
   991  0212                     	;# 
   992  0213                     	;# 
   993  0213                     	;# 
   994  0214                     	;# 
   995  0214                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0216                     	;# 
  1000  0216                     	;# 
  1001  0217                     	;# 
  1002  0217                     	;# 
  1003  0391                     	;# 
  1004  0392                     	;# 
  1005  0393                     	;# 
  1006  0498                     	;# 
  1007  0498                     	;# 
  1008  0499                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  0611                     	;# 
  1017  0612                     	;# 
  1018  0613                     	;# 
  1019  0613                     	;# 
  1020  0614                     	;# 
  1021  0615                     	;# 
  1022  0616                     	;# 
  1023  0616                     	;# 
  1024  0617                     	;# 
  1025  0618                     	;# 
  1026  0619                     	;# 
  1027  0619                     	;# 
  1028  061A                     	;# 
  1029  061B                     	;# 
  1030  061C                     	;# 
  1031  061C                     	;# 
  1032  0691                     	;# 
  1033  0692                     	;# 
  1034  0693                     	;# 
  1035  0694                     	;# 
  1036  0695                     	;# 
  1037  0F0F                     	;# 
  1038  0F10                     	;# 
  1039  0F11                     	;# 
  1040  0F12                     	;# 
  1041  0F13                     	;# 
  1042  0F14                     	;# 
  1043  0F15                     	;# 
  1044  0F16                     	;# 
  1045  0F17                     	;# 
  1046  0F18                     	;# 
  1047  0F19                     	;# 
  1048  0F1A                     	;# 
  1049  0F1B                     	;# 
  1050  0F1C                     	;# 
  1051  0F1D                     	;# 
  1052  0F1E                     	;# 
  1053  0F1F                     	;# 
  1054  0FE3                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066                           
  1067                           	psect	nvBANK0
  1068  0064                     __pnvBANK0:	
  1069  0064                     _timer0ReloadVal:	
  1070  0064                     	ds	1
  1071  000C                     _PORTAbits	set	12
  1072  000E                     _PORTCbits	set	14
  1073  000B                     _INTCONbits	set	11
  1074  0015                     _TMR0	set	21
  1075  0095                     _OPTION_REGbits	set	149
  1076  008E                     _TRISC	set	142
  1077  008C                     _TRISA	set	140
  1078  0097                     _WDTCON	set	151
  1079  0099                     _OSCCON	set	153
  1080  0095                     _OPTION_REG	set	149
  1081  011D                     _APFCON	set	285
  1082  010E                     _LATC	set	270
  1083  010C                     _LATA	set	268
  1084  0116                     _BORCON	set	278
  1085  010C                     _LATAbits	set	268
  1086  018C                     _ANSELA	set	396
  1087  018E                     _ANSELC	set	398
  1088  020C                     _WPUA	set	524
  1089                           
  1090                           ; #config settings
  1091  0000                     
  1092                           	psect	cinit
  1093  000D                     start_initialization:	
  1094  000D                     __initialization:	
  1095                           
  1096                           ; Clear objects allocated to COMMON
  1097  000D  01F6               	clrf	__pbssCOMMON& (0+127)
  1098  000E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1099  000F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1100  0010  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK0
  1103  0011  3020               	movlw	low __pbssBANK0
  1104  0012  0084               	movwf	4
  1105  0013  3000               	movlw	high __pbssBANK0
  1106  0014  0085               	movwf	5
  1107  0015  3044               	movlw	68
  1108  0016  21CA               	fcall	clear_ram0
  1109  0017                     end_of_initialization:	
  1110                           ;End of C runtime variable initialization code
  1111                           
  1112  0017                     __end_of__initialization:	
  1113  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1114  0018  0020               	movlb	0
  1115  0019  2979               	ljmp	_main	;jump to C main() function
  1116                           
  1117                           	psect	bssCOMMON
  1118  0076                     __pbssCOMMON:	
  1119  0076                     _guc_sec:	
  1120  0076                     	ds	2
  1121  0078                     _guc_choice:	
  1122  0078                     	ds	1
  1123  0079                     _guc_buzz_state:	
  1124  0079                     	ds	1
  1125                           
  1126                           	psect	bssBANK0
  1127  0020                     __pbssBANK0:	
  1128  0020                     _guc_deb:	
  1129  0020                     	ds	30
  1130  003E                     _guc_cycle:	
  1131  003E                     	ds	26
  1132  0058                     _TMR0_InterruptHandler:	
  1133  0058                     	ds	2
  1134  005A                     _Count_sec:	
  1135  005A                     	ds	2
  1136  005C                     _CountCallBack:	
  1137  005C                     	ds	2
  1138  005E                     _demo_time:	
  1139  005E                     	ds	2
  1140  0060                     _guc_min:	
  1141  0060                     	ds	2
  1142  0062                     _one_sec:	
  1143  0062                     	ds	2
  1144                           
  1145                           	psect	clrtext
  1146  01CA                     clear_ram0:	
  1147                           ;	Called with FSR0 containing the base address, and
  1148                           ;	WREG with the size to clear
  1149                           
  1150  01CA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1151  01CB                     clrloop0:	
  1152  01CB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1153  01CC  3101               	addfsr 0,1
  1154  01CD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1155  01CE  29CB               	goto	clrloop0	;have we reached the end yet?
  1156  01CF  3400               	retlw	0	;all done for this memory range, return
  1157                           
  1158                           	psect	cstackCOMMON
  1159  0070                     __pcstackCOMMON:	
  1160  0070                     ?_TMR0_DefaultInterruptHandler:	
  1161  0070                     ??_TMR0_DefaultInterruptHandler:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_PIN_MANAGER_Initialize:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ??_PIN_MANAGER_Initialize:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_OSCILLATOR_Initialize:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_OSCILLATOR_Initialize:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_WDT_Initialize:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ??_WDT_Initialize:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_check_cond:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_exe_cond:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ??_exe_cond:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_TMR0_Initialize:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ??_TMR0_Initialize:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_TMR0_ISR:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ??_TMR0_ISR:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_INTERRUPT_InterruptManager:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ??_INTERRUPT_InterruptManager:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_SYSTEM_Initialize:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_main:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_CHCK_COND:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ??_CHCK_COND:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x0
  1223  0070                     	ds	1
  1224  0071                     ??_SYSTEM_Initialize:	
  1225                           
  1226                           ; 1 bytes @ 0x1
  1227  0071                     	ds	1
  1228  0072                     CHCK_COND@i:	
  1229                           
  1230                           ; 1 bytes @ 0x2
  1231  0072                     	ds	1
  1232  0073                     CHCK_COND@x:	
  1233                           
  1234                           ; 1 bytes @ 0x3
  1235  0073                     	ds	1
  1236  0074                     ??_check_cond:	
  1237  0074                     ??_main:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240                           
  1241                           ; 1 bytes @ 0x4
  1242  0074                     	ds	1
  1243  0075                     main@cnt:	
  1244                           
  1245                           ; 1 bytes @ 0x5
  1246  0075                     	ds	1
  1247                           
  1248                           	psect	maintext
  1249  0179                     __pmaintext:	
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 51 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  cnt             1    5[COMMON] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : B1F/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1
  1269 ;;      Params:         0       0       0
  1270 ;;      Locals:         1       0       0
  1271 ;;      Temps:          1       0       0
  1272 ;;      Totals:         2       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels required when called:    5
  1275 ;; This function calls:
  1276 ;;		_SYSTEM_Initialize
  1277 ;;		_check_cond
  1278 ;;		_exe_cond
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _main
  1286  0179                     _main:	
  1287                           
  1288                           ;main.c: 53:     uint8_t cnt;;main.c: 55:     SYSTEM_Initialize();
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1292  0179  21D6               	fcall	_SYSTEM_Initialize
  1293                           
  1294                           ;main.c: 57:      for(cnt=0;cnt<6;cnt++) guc_cycle[cnt]=0;
  1295  017A  01F5               	clrf	main@cnt
  1296  017B  3006               	movlw	6
  1297  017C  0275               	subwf	main@cnt,w
  1298  017D  1803               	btfsc	3,0
  1299  017E  298E               	goto	l118
  1300  017F                     l1164:	
  1301  017F  3575               	lslf	main@cnt,w
  1302  0180  3E3E               	addlw	(low (_guc_cycle| 0))& (0+255)
  1303  0181  0086               	movwf	6
  1304  0182  0187               	clrf	7
  1305  0183  3000               	movlw	0
  1306  0184  3FC0               	movwi [0]fsr1
  1307  0185  3FC1               	movwi [1]fsr1
  1308  0186  3001               	movlw	1
  1309  0187  00F4               	movwf	??_main
  1310  0188  0874               	movf	??_main,w
  1311  0189  07F5               	addwf	main@cnt,f
  1312  018A  3006               	movlw	6
  1313  018B  0275               	subwf	main@cnt,w
  1314  018C  1C03               	skipc
  1315  018D  297F               	goto	l1164
  1316  018E                     l118:	
  1317                           
  1318                           ;main.c: 60:     (INTCONbits.GIE = 1);
  1319  018E  178B               	bsf	11,7	;volatile
  1320  018F                     l1170:	
  1321                           ;main.c: 62:     while(1)
  1322                           
  1323                           
  1324                           ;main.c: 63:     {;main.c: 64:       check_cond();
  1325  018F  2099               	fcall	_check_cond
  1326                           
  1327                           ;main.c: 65:       if(guc_choice > 0)
  1328  0190  0878               	movf	_guc_choice,w	;volatile
  1329  0191  1903               	btfsc	3,2
  1330  0192  2994               	goto	l1176
  1331                           
  1332                           ;main.c: 66:       {;main.c: 67:         exe_cond();
  1333  0193  201A               	fcall	_exe_cond
  1334  0194                     l1176:	
  1335                           ;main.c: 68:       }
  1336                           
  1337                           
  1338                           ;main.c: 69:       guc_choice=0;
  1339  0194  01F8               	clrf	_guc_choice	;volatile
  1340  0195  0064               	clrwdt	;# 
  1341                           
  1342                           ;main.c: 71:    }
  1343  0196  298F               	goto	l1170
  1344  0197                     __end_of_main:	
  1345                           
  1346                           	psect	text1
  1347  001A                     __ptext1:	
  1348 ;; *************** function _exe_cond *****************
  1349 ;; Defined at:
  1350 ;;		line 51 in file "source/src/OPSM_APP.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1
  1364 ;;      Params:         0       0       0
  1365 ;;      Locals:         0       0       0
  1366 ;;      Temps:          1       0       0
  1367 ;;      Totals:         1       0       0
  1368 ;;Total ram usage:        1 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    3
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _exe_cond
  1380  001A                     _exe_cond:	
  1381                           
  1382                           ;source/src/OPSM_APP.c: 53:   if(guc_choice == 1 || guc_choice == 2 || guc_choice == 3
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _exe_cond: [wreg+status,2+status,0]
  1386  001A  0378               	decf	_guc_choice,w	;volatile
  1387  001B  1903               	btfsc	3,2
  1388  001C  2829               	goto	l1088
  1389  001D  3002               	movlw	2
  1390  001E  0678               	xorwf	_guc_choice,w	;volatile
  1391  001F  1903               	btfsc	3,2
  1392  0020  2829               	goto	l1088
  1393  0021  3003               	movlw	3
  1394  0022  0678               	xorwf	_guc_choice,w	;volatile
  1395  0023  1903               	btfsc	3,2
  1396  0024  2829               	goto	l1088
  1397  0025  3004               	movlw	4
  1398  0026  0678               	xorwf	_guc_choice,w	;volatile
  1399  0027  1D03               	btfss	3,2
  1400  0028  282E               	goto	l1090
  1401  0029                     l1088:	
  1402                           
  1403                           ;source/src/OPSM_APP.c: 54:     || guc_choice == 4 ){guc_buzz_state=1;}
  1404  0029  3001               	movlw	1
  1405  002A  00F0               	movwf	??_exe_cond
  1406  002B  0870               	movf	??_exe_cond,w
  1407  002C  00F9               	movwf	_guc_buzz_state	;volatile
  1408  002D  282F               	goto	l1092
  1409  002E                     l1090:	
  1410                           ;source/src/OPSM_APP.c: 55:   else { guc_buzz_state=0;}
  1411                           
  1412  002E  01F9               	clrf	_guc_buzz_state	;volatile
  1413  002F                     l1092:	
  1414                           
  1415                           ;source/src/OPSM_APP.c: 57:   if(guc_choice == 5 || guc_choice == 6 || guc_choice == 7 |
      +                          | guc_choice == 8
  1416  002F  3005               	movlw	5
  1417  0030  0678               	xorwf	_guc_choice,w	;volatile
  1418  0031  1903               	btfsc	3,2
  1419  0032  284F               	goto	l184
  1420  0033  3006               	movlw	6
  1421  0034  0678               	xorwf	_guc_choice,w	;volatile
  1422  0035  1903               	btfsc	3,2
  1423  0036  284F               	goto	l184
  1424  0037  3007               	movlw	7
  1425  0038  0678               	xorwf	_guc_choice,w	;volatile
  1426  0039  1903               	btfsc	3,2
  1427  003A  284F               	goto	l184
  1428  003B  3008               	movlw	8
  1429  003C  0678               	xorwf	_guc_choice,w	;volatile
  1430  003D  1903               	btfsc	3,2
  1431  003E  284F               	goto	l184
  1432  003F  3009               	movlw	9
  1433  0040  0678               	xorwf	_guc_choice,w	;volatile
  1434  0041  1903               	btfsc	3,2
  1435  0042  284F               	goto	l184
  1436  0043  300A               	movlw	10
  1437  0044  0678               	xorwf	_guc_choice,w	;volatile
  1438  0045  1903               	btfsc	3,2
  1439  0046  284F               	goto	l184
  1440  0047  300B               	movlw	11
  1441  0048  0678               	xorwf	_guc_choice,w	;volatile
  1442  0049  1903               	btfsc	3,2
  1443  004A  284F               	goto	l184
  1444  004B  300C               	movlw	12
  1445  004C  0678               	xorwf	_guc_choice,w	;volatile
  1446  004D  1D03               	btfss	3,2
  1447  004E  2852               	goto	l182
  1448  004F                     l184:	
  1449                           
  1450                           ;source/src/OPSM_APP.c: 60:     {PORTCbits.RC4 = 1;}
  1451  004F  0020               	movlb	0	; select bank0
  1452  0050  160E               	bsf	14,4	;volatile
  1453  0051  2854               	goto	l1108
  1454  0052                     l182:	
  1455                           ;source/src/OPSM_APP.c: 61:   else { PORTCbits.RC4 = 0;}
  1456                           
  1457  0052  0020               	movlb	0	; select bank0
  1458  0053  120E               	bcf	14,4	;volatile
  1459  0054                     l1108:	
  1460                           
  1461                           ;source/src/OPSM_APP.c: 69:   if(guc_choice == 2)
  1462  0054  3002               	movlw	2
  1463  0055  0678               	xorwf	_guc_choice,w	;volatile
  1464  0056  1D03               	btfss	3,2
  1465  0057  2871               	goto	l1124
  1466                           
  1467                           ;source/src/OPSM_APP.c: 70:    {;source/src/OPSM_APP.c: 71:        guc_sec=0; PORTCbits.
      +                          RC5 = 1;
  1468  0058  01F6               	clrf	_guc_sec	;volatile
  1469  0059  01F7               	clrf	_guc_sec+1	;volatile
  1470  005A  168E               	bsf	14,5	;volatile
  1471  005B                     l1114:	
  1472                           ;source/src/OPSM_APP.c: 72:        while(guc_sec<6) __asm("clrwdt");
  1473                           
  1474  005B  3000               	movlw	0
  1475  005C  0277               	subwf	_guc_sec+1,w	;volatile
  1476  005D  3006               	movlw	6
  1477  005E  1903               	skipnz
  1478  005F  0276               	subwf	_guc_sec,w	;volatile
  1479  0060  1803               	btfsc	3,0
  1480  0061  2864               	goto	l189
  1481  0062  0064               	clrwdt	;# 
  1482  0063  285B               	goto	l1114
  1483  0064                     l189:	
  1484                           
  1485                           ;source/src/OPSM_APP.c: 73:        PORTCbits.RC5 = 0;
  1486  0064  0020               	movlb	0	; select bank0
  1487  0065  128E               	bcf	14,5	;volatile
  1488                           
  1489                           ;source/src/OPSM_APP.c: 74:        while(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(PORTCbits.R
      +                          C1)&&(!PORTCbits.RC0))) __asm("clrwdt");
  1490  0066  2868               	goto	l190
  1491  0067                     l191:	
  1492  0067  0064               	clrwdt	;# 
  1493  0068                     l190:	
  1494  0068  0020               	movlb	0	; select bank0
  1495  0069  198E               	btfsc	14,3	;volatile
  1496  006A  1D0E               	btfss	14,2	;volatile
  1497  006B  288D               	goto	l1138
  1498  006C  1C8E               	btfss	14,1	;volatile
  1499  006D  288D               	goto	l1138
  1500  006E  1C0E               	btfss	14,0	;volatile
  1501  006F  2867               	goto	l191
  1502  0070  288D               	goto	l1138
  1503  0071                     l1124:	
  1504                           ;source/src/OPSM_APP.c: 77:   else if(guc_choice == 6)
  1505                           
  1506                           ;source/src/OPSM_APP.c: 76:    }
  1507                           
  1508                           ;source/src/OPSM_APP.c: 75:        guc_buzz_state=0;
  1509                           
  1510  0071  3006               	movlw	6
  1511  0072  0678               	xorwf	_guc_choice,w	;volatile
  1512  0073  1D03               	btfss	3,2
  1513  0074  288F               	goto	l196
  1514                           
  1515                           ;source/src/OPSM_APP.c: 78:    {;source/src/OPSM_APP.c: 79:        guc_sec=0; PORTCbits.
      +                          RC5 = 1;
  1516  0075  01F6               	clrf	_guc_sec	;volatile
  1517  0076  01F7               	clrf	_guc_sec+1	;volatile
  1518  0077  168E               	bsf	14,5	;volatile
  1519  0078                     l1130:	
  1520                           ;source/src/OPSM_APP.c: 80:        while(guc_sec<6) __asm("clrwdt");
  1521                           
  1522  0078  3000               	movlw	0
  1523  0079  0277               	subwf	_guc_sec+1,w	;volatile
  1524  007A  3006               	movlw	6
  1525  007B  1903               	skipnz
  1526  007C  0276               	subwf	_guc_sec,w	;volatile
  1527  007D  1803               	btfsc	3,0
  1528  007E  2881               	goto	l199
  1529  007F  0064               	clrwdt	;# 
  1530  0080  2878               	goto	l1130
  1531  0081                     l199:	
  1532                           
  1533                           ;source/src/OPSM_APP.c: 81:        PORTCbits.RC5 = 0;
  1534  0081  0020               	movlb	0	; select bank0
  1535  0082  128E               	bcf	14,5	;volatile
  1536                           
  1537                           ;source/src/OPSM_APP.c: 82:        while(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(!PORTCbits.
      +                          RC1)&&(!PORTCbits.RC0))) __asm("clrwdt");
  1538  0083  2885               	goto	l200
  1539  0084                     l201:	
  1540  0084  0064               	clrwdt	;# 
  1541  0085                     l200:	
  1542  0085  0020               	movlb	0	; select bank0
  1543  0086  198E               	btfsc	14,3	;volatile
  1544  0087  1D0E               	btfss	14,2	;volatile
  1545  0088  288D               	goto	l1138
  1546  0089  188E               	btfsc	14,1	;volatile
  1547  008A  288D               	goto	l1138
  1548  008B  1C0E               	btfss	14,0	;volatile
  1549  008C  2884               	goto	l201
  1550  008D                     l1138:	
  1551                           
  1552                           ;source/src/OPSM_APP.c: 83:        guc_buzz_state=0;
  1553  008D  01F9               	clrf	_guc_buzz_state	;volatile
  1554                           
  1555                           ;source/src/OPSM_APP.c: 84:    }
  1556  008E  2890               	goto	l1140
  1557  008F                     l196:	
  1558                           ;source/src/OPSM_APP.c: 85:   else { PORTCbits.RC5 = 0;}
  1559                           
  1560  008F  128E               	bcf	14,5	;volatile
  1561  0090                     l1140:	
  1562                           
  1563                           ;source/src/OPSM_APP.c: 87:   if (guc_choice == 14)
  1564  0090  300E               	movlw	14
  1565  0091  0678               	xorwf	_guc_choice,w	;volatile
  1566  0092  1D03               	btfss	3,2
  1567  0093  0008               	return
  1568                           
  1569                           ;source/src/OPSM_APP.c: 88:   {;source/src/OPSM_APP.c: 89:     guc_buzz_state=0;
  1570  0094  01F9               	clrf	_guc_buzz_state	;volatile
  1571                           
  1572                           ;source/src/OPSM_APP.c: 90:     PORTCbits.RC4 = 0;
  1573  0095  120E               	bcf	14,4	;volatile
  1574                           
  1575                           ;source/src/OPSM_APP.c: 91:     PORTCbits.RC5 = 0;
  1576  0096  128E               	bcf	14,5	;volatile
  1577                           
  1578                           ;source/src/OPSM_APP.c: 92:     PORTAbits.RA2 = 0;
  1579  0097  110C               	bcf	12,2	;volatile
  1580  0098  0008               	return
  1581  0099                     __end_of_exe_cond:	
  1582                           ;source/src/OPSM_APP.c: 93:   }
  1583                           
  1584                           
  1585                           	psect	text2
  1586  0099                     __ptext2:	
  1587 ;; *************** function _check_cond *****************
  1588 ;; Defined at:
  1589 ;;		line 30 in file "source/src/OPSM_APP.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1
  1603 ;;      Params:         0       0       0
  1604 ;;      Locals:         0       0       0
  1605 ;;      Temps:          0       0       0
  1606 ;;      Totals:         0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    4
  1610 ;; This function calls:
  1611 ;;		_CHCK_COND
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _check_cond
  1619  0099                     _check_cond:	
  1620                           
  1621                           ;source/src/OPSM_APP.c: 32:     guc_choice = 0;
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _check_cond: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1625  0099  01F8               	clrf	_guc_choice	;volatile
  1626                           
  1627                           ;source/src/OPSM_APP.c: 33:     if(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(PORTCbits.RC1)&&(
      +                          PORTCbits.RC0))){ CHCK_COND(1); }
  1628  009A  0020               	movlb	0	; select bank0
  1629  009B  198E               	btfsc	14,3	;volatile
  1630  009C  1D0E               	btfss	14,2	;volatile
  1631  009D  28A3               	goto	l149
  1632  009E  188E               	btfsc	14,1	;volatile
  1633  009F  1C0E               	btfss	14,0	;volatile
  1634  00A0  28A3               	goto	l149
  1635  00A1  3001               	movlw	1
  1636  00A2  2904               	goto	L1
  1637  00A3                     l149:	
  1638                           ;source/src/OPSM_APP.c: 34:     else if(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(PORTCbits.RC
      +                          1)&&(!PORTCbits.RC0))){ CHCK_COND(2); }
  1639                           
  1640  00A3  198E               	btfsc	14,3	;volatile
  1641  00A4  1D0E               	btfss	14,2	;volatile
  1642  00A5  28AB               	goto	l151
  1643  00A6  188E               	btfsc	14,1	;volatile
  1644  00A7  180E               	btfsc	14,0	;volatile
  1645  00A8  28AB               	goto	l151
  1646  00A9  3002               	movlw	2
  1647  00AA  2904               	goto	L1
  1648  00AB                     l151:	
  1649                           ;source/src/OPSM_APP.c: 35:     else if(((PORTCbits.RC3)&&(!PORTCbits.RC2)&&(PORTCbits.R
      +                          C1)&&(PORTCbits.RC0))){ CHCK_COND(3); }
  1650                           
  1651  00AB  198E               	btfsc	14,3	;volatile
  1652  00AC  190E               	btfsc	14,2	;volatile
  1653  00AD  28B3               	goto	l153
  1654  00AE  188E               	btfsc	14,1	;volatile
  1655  00AF  1C0E               	btfss	14,0	;volatile
  1656  00B0  28B3               	goto	l153
  1657  00B1  3003               	movlw	3
  1658  00B2  2904               	goto	L1
  1659  00B3                     l153:	
  1660                           ;source/src/OPSM_APP.c: 36:     else if(((PORTCbits.RC3)&&(!PORTCbits.RC2)&&(PORTCbits.R
      +                          C1)&&(!PORTCbits.RC0))){ CHCK_COND(4); }
  1661                           
  1662  00B3  198E               	btfsc	14,3	;volatile
  1663  00B4  190E               	btfsc	14,2	;volatile
  1664  00B5  28BB               	goto	l155
  1665  00B6  188E               	btfsc	14,1	;volatile
  1666  00B7  180E               	btfsc	14,0	;volatile
  1667  00B8  28BB               	goto	l155
  1668  00B9  3004               	movlw	4
  1669  00BA  2904               	goto	L1
  1670  00BB                     l155:	
  1671                           ;source/src/OPSM_APP.c: 37:     else if(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(!PORTCbits.R
      +                          C1)&&(PORTCbits.RC0))){ CHCK_COND(5); }
  1672                           
  1673  00BB  198E               	btfsc	14,3	;volatile
  1674  00BC  1D0E               	btfss	14,2	;volatile
  1675  00BD  28C3               	goto	l157
  1676  00BE  1C8E               	btfss	14,1	;volatile
  1677  00BF  1C0E               	btfss	14,0	;volatile
  1678  00C0  28C3               	goto	l157
  1679  00C1  3005               	movlw	5
  1680  00C2  2904               	goto	L1
  1681  00C3                     l157:	
  1682                           ;source/src/OPSM_APP.c: 38:     else if(((PORTCbits.RC3)&&(PORTCbits.RC2)&&(!PORTCbits.R
      +                          C1)&&(!PORTCbits.RC0))){ CHCK_COND(6); }
  1683                           
  1684  00C3  198E               	btfsc	14,3	;volatile
  1685  00C4  1D0E               	btfss	14,2	;volatile
  1686  00C5  28CB               	goto	l159
  1687  00C6  1C8E               	btfss	14,1	;volatile
  1688  00C7  180E               	btfsc	14,0	;volatile
  1689  00C8  28CB               	goto	l159
  1690  00C9  3006               	movlw	6
  1691  00CA  2904               	goto	L1
  1692  00CB                     l159:	
  1693                           ;source/src/OPSM_APP.c: 39:     else if(((PORTCbits.RC3)&&(!PORTCbits.RC2)&&(!PORTCbits.
      +                          RC1)&&(PORTCbits.RC0))){ CHCK_COND(7); }
  1694                           
  1695  00CB  198E               	btfsc	14,3	;volatile
  1696  00CC  190E               	btfsc	14,2	;volatile
  1697  00CD  28D3               	goto	l161
  1698  00CE  1C8E               	btfss	14,1	;volatile
  1699  00CF  1C0E               	btfss	14,0	;volatile
  1700  00D0  28D3               	goto	l161
  1701  00D1  3007               	movlw	7
  1702  00D2  2904               	goto	L1
  1703  00D3                     l161:	
  1704                           ;source/src/OPSM_APP.c: 40:     else if(((PORTCbits.RC3)&&(!PORTCbits.RC2)&&(!PORTCbits.
      +                          RC1)&&(!PORTCbits.RC0))){ CHCK_COND(8); }
  1705                           
  1706  00D3  198E               	btfsc	14,3	;volatile
  1707  00D4  190E               	btfsc	14,2	;volatile
  1708  00D5  28DB               	goto	l163
  1709  00D6  1C8E               	btfss	14,1	;volatile
  1710  00D7  180E               	btfsc	14,0	;volatile
  1711  00D8  28DB               	goto	l163
  1712  00D9  3008               	movlw	8
  1713  00DA  2904               	goto	L1
  1714  00DB                     l163:	
  1715                           ;source/src/OPSM_APP.c: 41:     else if(((!PORTCbits.RC3)&&(PORTCbits.RC2)&&(!PORTCbits.
      +                          RC1)&&(PORTCbits.RC0))){ CHCK_COND(9); }
  1716                           
  1717  00DB  1D8E               	btfss	14,3	;volatile
  1718  00DC  1D0E               	btfss	14,2	;volatile
  1719  00DD  28E3               	goto	l165
  1720  00DE  1C8E               	btfss	14,1	;volatile
  1721  00DF  1C0E               	btfss	14,0	;volatile
  1722  00E0  28E3               	goto	l165
  1723  00E1  3009               	movlw	9
  1724  00E2  2904               	goto	L1
  1725  00E3                     l165:	
  1726                           ;source/src/OPSM_APP.c: 42:     else if(((!PORTCbits.RC3)&&(PORTCbits.RC2)&&(!PORTCbits.
      +                          RC1)&&(!PORTCbits.RC0))){ CHCK_COND(10);}
  1727                           
  1728  00E3  1D8E               	btfss	14,3	;volatile
  1729  00E4  1D0E               	btfss	14,2	;volatile
  1730  00E5  28EB               	goto	l167
  1731  00E6  1C8E               	btfss	14,1	;volatile
  1732  00E7  180E               	btfsc	14,0	;volatile
  1733  00E8  28EB               	goto	l167
  1734  00E9  300A               	movlw	10
  1735  00EA  2904               	goto	L1
  1736  00EB                     l167:	
  1737                           ;source/src/OPSM_APP.c: 43:     else if(((!PORTCbits.RC3)&&(!PORTCbits.RC2)&&(!PORTCbits
      +                          .RC1)&&(PORTCbits.RC0))){ CHCK_COND(11); }
  1738                           
  1739  00EB  1D8E               	btfss	14,3	;volatile
  1740  00EC  190E               	btfsc	14,2	;volatile
  1741  00ED  28F3               	goto	l169
  1742  00EE  1C8E               	btfss	14,1	;volatile
  1743  00EF  1C0E               	btfss	14,0	;volatile
  1744  00F0  28F3               	goto	l169
  1745  00F1  300B               	movlw	11
  1746  00F2  2904               	goto	L1
  1747  00F3                     l169:	
  1748                           ;source/src/OPSM_APP.c: 44:     else if(((!PORTCbits.RC3)&&(!PORTCbits.RC2)&&(!PORTCbits
      +                          .RC1)&&(!PORTCbits.RC0))){ CHCK_COND(12); }
  1749                           
  1750  00F3  1D8E               	btfss	14,3	;volatile
  1751  00F4  190E               	btfsc	14,2	;volatile
  1752  00F5  28FB               	goto	l171
  1753  00F6  1C8E               	btfss	14,1	;volatile
  1754  00F7  180E               	btfsc	14,0	;volatile
  1755  00F8  28FB               	goto	l171
  1756  00F9  300C               	movlw	12
  1757  00FA  2904               	goto	L1
  1758  00FB                     l171:	
  1759                           ;source/src/OPSM_APP.c: 45:     else if(((!PORTCbits.RC3)&&(PORTCbits.RC2)&&(PORTCbits.R
      +                          C1)&&(PORTCbits.RC0))){ CHCK_COND(13); }
  1760                           
  1761  00FB  1D8E               	btfss	14,3	;volatile
  1762  00FC  1D0E               	btfss	14,2	;volatile
  1763  00FD  2903               	goto	l1078
  1764  00FE  188E               	btfsc	14,1	;volatile
  1765  00FF  1C0E               	btfss	14,0	;volatile
  1766  0100  2903               	goto	l1078
  1767  0101  300D               	movlw	13
  1768  0102  2904               	goto	L1
  1769  0103                     l1078:	
  1770                           ;source/src/OPSM_APP.c: 46:     else {CHCK_COND(14);}
  1771                           
  1772  0103  300E               	movlw	14
  1773  0104                     L1:	
  1774  0104  2107               	fcall	_CHCK_COND
  1775  0105  0064               	clrwdt	;# 
  1776  0106  0008               	return
  1777  0107                     __end_of_check_cond:	
  1778                           
  1779                           	psect	text3
  1780  0107                     __ptext3:	
  1781 ;; *************** function _CHCK_COND *****************
  1782 ;; Defined at:
  1783 ;;		line 21 in file "source/src/OPSM_APP.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  x               1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  x               1    3[COMMON] unsigned char 
  1788 ;;  i               1    2[COMMON] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1
  1798 ;;      Params:         0       0       0
  1799 ;;      Locals:         2       0       0
  1800 ;;      Temps:          2       0       0
  1801 ;;      Totals:         4       0       0
  1802 ;;Total ram usage:        4 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_check_cond
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _CHCK_COND
  1814  0107                     _CHCK_COND:	
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _CHCK_COND: [wreg+fsr1l+fsr1h+status,2+status,0]
  1818                           ;CHCK_COND@x stored from wreg
  1819  0107  00F3               	movwf	CHCK_COND@x
  1820                           
  1821                           ;source/src/OPSM_APP.c: 21: void CHCK_COND(uint8_t x);source/src/OPSM_APP.c: 22: {;sourc
      +                          e/src/OPSM_APP.c: 23:    uint8_t i;;source/src/OPSM_APP.c: 24:    guc_deb[x]++;
  1822  0108  3573               	lslf	CHCK_COND@x,w
  1823  0109  3E20               	addlw	(low (_guc_deb| 0))& (0+255)
  1824  010A  0086               	movwf	6
  1825  010B  0187               	clrf	7
  1826  010C  3001               	movlw	1
  1827  010D  0781               	addwf	1,f
  1828  010E  3141               	addfsr 1,1
  1829  010F  1803               	skipnc
  1830  0110  0A81               	incf	1,f
  1831                           
  1832                           ;source/src/OPSM_APP.c: 25:    for(i=0;i<=14 && i!=x;i++){guc_deb[i] = 0;}
  1833  0111  01F2               	clrf	CHCK_COND@i
  1834  0112  291E               	goto	l938
  1835  0113                     l934:	
  1836  0113  3572               	lslf	CHCK_COND@i,w
  1837  0114  3E20               	addlw	(low (_guc_deb| 0))& (0+255)
  1838  0115  0086               	movwf	6
  1839  0116  0187               	clrf	7
  1840  0117  3000               	movlw	0
  1841  0118  3FC0               	movwi [0]fsr1
  1842  0119  3FC1               	movwi [1]fsr1
  1843  011A  3001               	movlw	1
  1844  011B  00F0               	movwf	??_CHCK_COND
  1845  011C  0870               	movf	??_CHCK_COND,w
  1846  011D  07F2               	addwf	CHCK_COND@i,f
  1847  011E                     l938:	
  1848  011E  300F               	movlw	15
  1849  011F  0272               	subwf	CHCK_COND@i,w
  1850  0120  1803               	skipnc
  1851  0121  2926               	goto	l942
  1852  0122  0872               	movf	CHCK_COND@i,w
  1853  0123  0673               	xorwf	CHCK_COND@x,w
  1854  0124  1D03               	skipz
  1855  0125  2913               	goto	l934
  1856  0126                     l942:	
  1857                           
  1858                           ;source/src/OPSM_APP.c: 26:    if(guc_deb[x] > 10){ guc_choice = x; guc_deb[x] = 0;}
  1859  0126  3573               	lslf	CHCK_COND@x,w
  1860  0127  3E20               	addlw	(low (_guc_deb| 0))& (0+255)
  1861  0128  0086               	movwf	6
  1862  0129  0187               	clrf	7
  1863  012A  3F40               	moviw [0]fsr1
  1864  012B  00F0               	movwf	??_CHCK_COND
  1865  012C  3F41               	moviw [1]fsr1
  1866  012D  00F1               	movwf	??_CHCK_COND+1
  1867  012E  3000               	movlw	0
  1868  012F  0271               	subwf	??_CHCK_COND+1,w
  1869  0130  300B               	movlw	11
  1870  0131  1903               	skipnz
  1871  0132  0270               	subwf	??_CHCK_COND,w
  1872  0133  1C03               	skipc
  1873  0134  0008               	return
  1874  0135  0873               	movf	CHCK_COND@x,w
  1875  0136  00F0               	movwf	??_CHCK_COND
  1876  0137  0870               	movf	??_CHCK_COND,w
  1877  0138  00F8               	movwf	_guc_choice	;volatile
  1878  0139  3573               	lslf	CHCK_COND@x,w
  1879  013A  3E20               	addlw	(low (_guc_deb| 0))& (0+255)
  1880  013B  0086               	movwf	6
  1881  013C  0187               	clrf	7
  1882  013D  3000               	movlw	0
  1883  013E  3FC0               	movwi [0]fsr1
  1884  013F  3FC1               	movwi [1]fsr1
  1885  0140  0008               	return
  1886  0141                     __end_of_CHCK_COND:	
  1887                           
  1888                           	psect	text4
  1889  01D6                     __ptext4:	
  1890 ;; *************** function _SYSTEM_Initialize *****************
  1891 ;; Defined at:
  1892 ;;		line 4 in file "mcc_generated_files/mcc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1
  1906 ;;      Params:         0       0       0
  1907 ;;      Locals:         0       0       0
  1908 ;;      Temps:          0       0       0
  1909 ;;      Totals:         0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    4
  1913 ;; This function calls:
  1914 ;;		_OSCILLATOR_Initialize
  1915 ;;		_PIN_MANAGER_Initialize
  1916 ;;		_TMR0_Initialize
  1917 ;;		_WDT_Initialize
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _SYSTEM_Initialize
  1925  01D6                     _SYSTEM_Initialize:	
  1926                           
  1927                           ;mcc_generated_files/mcc.c: 7:     PIN_MANAGER_Initialize();
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1931  01D6  2197               	fcall	_PIN_MANAGER_Initialize
  1932                           
  1933                           ;mcc_generated_files/mcc.c: 8:     OSCILLATOR_Initialize();
  1934  01D7  21D0               	fcall	_OSCILLATOR_Initialize
  1935                           
  1936                           ;mcc_generated_files/mcc.c: 9:     WDT_Initialize();
  1937  01D8  21DB               	fcall	_WDT_Initialize
  1938                           
  1939                           ;mcc_generated_files/mcc.c: 10:     TMR0_Initialize();
  1940  01D9  21BB               	fcall	_TMR0_Initialize
  1941  01DA  0008               	return
  1942  01DB                     __end_of_SYSTEM_Initialize:	
  1943                           
  1944                           	psect	text5
  1945  01DB                     __ptext5:	
  1946 ;; *************** function _WDT_Initialize *****************
  1947 ;; Defined at:
  1948 ;;		line 21 in file "mcc_generated_files/mcc.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1
  1962 ;;      Params:         0       0       0
  1963 ;;      Locals:         0       0       0
  1964 ;;      Temps:          0       0       0
  1965 ;;      Totals:         0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    3
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_SYSTEM_Initialize
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _WDT_Initialize
  1978  01DB                     _WDT_Initialize:	
  1979                           
  1980                           ;mcc_generated_files/mcc.c: 24:     WDTCON = 0x17;
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _WDT_Initialize: [wreg]
  1984  01DB  3017               	movlw	23
  1985  01DC  0021               	movlb	1	; select bank1
  1986  01DD  0097               	movwf	23	;volatile
  1987  01DE  0008               	return
  1988  01DF                     __end_of_WDT_Initialize:	
  1989                           
  1990                           	psect	text6
  1991  01BB                     __ptext6:	
  1992 ;; *************** function _TMR0_Initialize *****************
  1993 ;; Defined at:
  1994 ;;		line 27 in file "mcc_generated_files/tmr0.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1
  2008 ;;      Params:         0       0       0
  2009 ;;      Locals:         0       0       0
  2010 ;;      Temps:          1       0       0
  2011 ;;      Totals:         1       0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    3
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_SYSTEM_Initialize
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _TMR0_Initialize
  2024  01BB                     _TMR0_Initialize:	
  2025                           
  2026                           ;mcc_generated_files/tmr0.c: 30:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2030  01BB  0021               	movlb	1	; select bank1
  2031  01BC  0815               	movf	21,w	;volatile
  2032  01BD  39C0               	andlw	192
  2033  01BE  3817               	iorlw	23
  2034  01BF  0095               	movwf	21	;volatile
  2035                           
  2036                           ;mcc_generated_files/tmr0.c: 32:     TMR0 = 0xF0;
  2037  01C0  30F0               	movlw	240
  2038  01C1  0020               	movlb	0	; select bank0
  2039  01C2  0095               	movwf	21	;volatile
  2040                           
  2041                           ;mcc_generated_files/tmr0.c: 34:     timer0ReloadVal= 240;
  2042  01C3  30F0               	movlw	240
  2043  01C4  00F0               	movwf	??_TMR0_Initialize
  2044  01C5  0870               	movf	??_TMR0_Initialize,w
  2045  01C6  00E4               	movwf	_timer0ReloadVal	;volatile
  2046                           
  2047                           ;mcc_generated_files/tmr0.c: 36:     INTCONbits.TMR0IF = 0;
  2048  01C7  110B               	bcf	11,2	;volatile
  2049                           
  2050                           ;mcc_generated_files/tmr0.c: 38:     INTCONbits.TMR0IE = 1;
  2051  01C8  168B               	bsf	11,5	;volatile
  2052  01C9  0008               	return
  2053  01CA                     __end_of_TMR0_Initialize:	
  2054                           
  2055                           	psect	text7
  2056  0197                     __ptext7:	
  2057 ;; *************** function _PIN_MANAGER_Initialize *****************
  2058 ;; Defined at:
  2059 ;;		line 9 in file "mcc_generated_files/pin_manager.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1
  2073 ;;      Params:         0       0       0
  2074 ;;      Locals:         0       0       0
  2075 ;;      Temps:          0       0       0
  2076 ;;      Totals:         0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_SYSTEM_Initialize
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _PIN_MANAGER_Initialize
  2089  0197                     _PIN_MANAGER_Initialize:	
  2090                           
  2091                           ;mcc_generated_files/pin_manager.c: 14:     LATA = 0x00;
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2095  0197  0022               	movlb	2	; select bank2
  2096  0198  018C               	clrf	12	;volatile
  2097                           
  2098                           ;mcc_generated_files/pin_manager.c: 15:     LATC = 0x00;
  2099  0199  018E               	clrf	14	;volatile
  2100                           
  2101                           ;mcc_generated_files/pin_manager.c: 20:     TRISA = 0x20;
  2102  019A  3020               	movlw	32
  2103  019B  0021               	movlb	1	; select bank1
  2104  019C  008C               	movwf	12	;volatile
  2105                           
  2106                           ;mcc_generated_files/pin_manager.c: 21:     TRISC = 0x0F;
  2107  019D  300F               	movlw	15
  2108  019E  008E               	movwf	14	;volatile
  2109                           
  2110                           ;mcc_generated_files/pin_manager.c: 26:     ANSELC = 0x00;
  2111  019F  0023               	movlb	3	; select bank3
  2112  01A0  018E               	clrf	14	;volatile
  2113                           
  2114                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x00;
  2115  01A1  018C               	clrf	12	;volatile
  2116                           
  2117                           ;mcc_generated_files/pin_manager.c: 32:     WPUA = 0x00;
  2118  01A2  0024               	movlb	4	; select bank4
  2119  01A3  018C               	clrf	12	;volatile
  2120                           
  2121                           ;mcc_generated_files/pin_manager.c: 33:     OPTION_REGbits.nWPUEN = 1;
  2122  01A4  0021               	movlb	1	; select bank1
  2123  01A5  1795               	bsf	21,7	;volatile
  2124                           
  2125                           ;mcc_generated_files/pin_manager.c: 40:     APFCON = 0x00;
  2126  01A6  0022               	movlb	2	; select bank2
  2127  01A7  019D               	clrf	29	;volatile
  2128  01A8  0008               	return
  2129  01A9                     __end_of_PIN_MANAGER_Initialize:	
  2130                           
  2131                           	psect	text8
  2132  01D0                     __ptext8:	
  2133 ;; *************** function _OSCILLATOR_Initialize *****************
  2134 ;; Defined at:
  2135 ;;		line 13 in file "mcc_generated_files/mcc.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1
  2149 ;;      Params:         0       0       0
  2150 ;;      Locals:         0       0       0
  2151 ;;      Temps:          0       0       0
  2152 ;;      Totals:         0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    3
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_SYSTEM_Initialize
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _OSCILLATOR_Initialize
  2165  01D0                     _OSCILLATOR_Initialize:	
  2166                           
  2167                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x7A;
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2171  01D0  307A               	movlw	122
  2172  01D1  0021               	movlb	1	; select bank1
  2173  01D2  0099               	movwf	25	;volatile
  2174                           
  2175                           ;mcc_generated_files/mcc.c: 18:     BORCON = 0x00;
  2176  01D3  0022               	movlb	2	; select bank2
  2177  01D4  0196               	clrf	22	;volatile
  2178  01D5  0008               	return
  2179  01D6                     __end_of_OSCILLATOR_Initialize:	
  2180                           
  2181                           	psect	intentry
  2182  0004                     __pintentry:	
  2183 ;; *************** function _INTERRUPT_InterruptManager *****************
  2184 ;; Defined at:
  2185 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1
  2199 ;;      Params:         0       0       0
  2200 ;;      Locals:         0       0       0
  2201 ;;      Temps:          0       0       0
  2202 ;;      Totals:         0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    2
  2206 ;; This function calls:
  2207 ;;		_TMR0_ISR
  2208 ;; This function is called by:
  2209 ;;		Interrupt level 1
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213  0004                     _INTERRUPT_InterruptManager:	
  2214                           
  2215                           ;incstack = 0
  2216  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2217                           
  2218                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2219  0005  3180               	pagesel	$
  2220                           
  2221                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  2222  0006  1A8B               	btfsc	11,5	;volatile
  2223  0007  1D0B               	btfss	11,2	;volatile
  2224  0008  280A               	goto	i1l56
  2225                           
  2226                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  2227  0009  2141               	fcall	_TMR0_ISR
  2228  000A                     i1l56:	
  2229                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  2230                           
  2231  000A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2232  000B  0009               	retfie
  2233  000C                     __end_of_INTERRUPT_InterruptManager:	
  2234                           
  2235                           	psect	text10
  2236  0141                     __ptext10:	
  2237 ;; *************** function _TMR0_ISR *****************
  2238 ;; Defined at:
  2239 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1
  2253 ;;      Params:         0       0       0
  2254 ;;      Locals:         0       0       0
  2255 ;;      Temps:          0       0       0
  2256 ;;      Totals:         0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    1
  2260 ;; This function calls:
  2261 ;;		_TMR0_DefaultInterruptHandler
  2262 ;; This function is called by:
  2263 ;;		_INTERRUPT_InterruptManager
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _TMR0_ISR
  2269  0141                     _TMR0_ISR:	
  2270                           
  2271                           ;mcc_generated_files/tmr0.c: 63:     INTCONbits.TMR0IF = 0;
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2275  0141  110B               	bcf	11,2	;volatile
  2276                           
  2277                           ;mcc_generated_files/tmr0.c: 64:     TMR0 = timer0ReloadVal;
  2278  0142  0020               	movlb	0	; select bank0
  2279  0143  0864               	movf	_timer0ReloadVal,w	;volatile
  2280  0144  0095               	movwf	21	;volatile
  2281  0145  0064               	clrwdt	;# 
  2282                           
  2283                           ;mcc_generated_files/tmr0.c: 67:     if (Count_sec > 1024)
  2284  0146  3004               	movlw	4
  2285  0147  0020               	movlb	0	; select bank0
  2286  0148  025B               	subwf	_Count_sec+1,w	;volatile
  2287  0149  3001               	movlw	1
  2288  014A  1903               	skipnz
  2289  014B  025A               	subwf	_Count_sec,w	;volatile
  2290  014C  1C03               	skipc
  2291  014D  2965               	goto	i1l34
  2292                           
  2293                           ;mcc_generated_files/tmr0.c: 68:     {;mcc_generated_files/tmr0.c: 69:          guc_sec+
      +                          +;
  2294  014E  3001               	movlw	1
  2295  014F  07F6               	addwf	_guc_sec,f	;volatile
  2296  0150  3000               	movlw	0
  2297  0151  3DF7               	addwfc	_guc_sec+1,f	;volatile
  2298                           
  2299                           ;mcc_generated_files/tmr0.c: 70:          one_sec++;
  2300  0152  3001               	movlw	1
  2301  0153  07E2               	addwf	_one_sec,f	;volatile
  2302  0154  3000               	movlw	0
  2303  0155  3DE3               	addwfc	_one_sec+1,f	;volatile
  2304                           
  2305                           ;mcc_generated_files/tmr0.c: 71:          if (one_sec > 10)
  2306  0156  3000               	movlw	0
  2307  0157  0263               	subwf	_one_sec+1,w	;volatile
  2308  0158  300B               	movlw	11
  2309  0159  1903               	skipnz
  2310  015A  0262               	subwf	_one_sec,w	;volatile
  2311  015B  1C03               	skipc
  2312  015C  2963               	goto	i1l958
  2313                           
  2314                           ;mcc_generated_files/tmr0.c: 72:          {;mcc_generated_files/tmr0.c: 73:             
      +                           guc_min++;
  2315  015D  3001               	movlw	1
  2316  015E  07E0               	addwf	_guc_min,f	;volatile
  2317  015F  3000               	movlw	0
  2318  0160  3DE1               	addwfc	_guc_min+1,f	;volatile
  2319                           
  2320                           ;mcc_generated_files/tmr0.c: 74:              one_sec = 0;
  2321  0161  01E2               	clrf	_one_sec	;volatile
  2322  0162  01E3               	clrf	_one_sec+1	;volatile
  2323  0163                     i1l958:	
  2324                           ;mcc_generated_files/tmr0.c: 75:          }
  2325                           
  2326                           
  2327                           ;mcc_generated_files/tmr0.c: 77:         Count_sec = 0;
  2328  0163  01DA               	clrf	_Count_sec	;volatile
  2329  0164  01DB               	clrf	_Count_sec+1	;volatile
  2330  0165                     i1l34:	
  2331                           ;mcc_generated_files/tmr0.c: 78:     }
  2332                           
  2333                           
  2334                           ;mcc_generated_files/tmr0.c: 81:     if (CountCallBack >= 500)
  2335  0165  3001               	movlw	1
  2336  0166  025D               	subwf	_CountCallBack+1,w	;volatile
  2337  0167  30F4               	movlw	244
  2338  0168  1903               	skipnz
  2339  0169  025C               	subwf	_CountCallBack,w	;volatile
  2340  016A  1C03               	skipc
  2341  016B  2970               	goto	i1l964
  2342                           
  2343                           ;mcc_generated_files/tmr0.c: 82:     {;mcc_generated_files/tmr0.c: 84:         TMR0_Defa
      +                          ultInterruptHandler();
  2344  016C  21A9               	fcall	_TMR0_DefaultInterruptHandler
  2345                           
  2346                           ;mcc_generated_files/tmr0.c: 86:         CountCallBack = 0;
  2347  016D  0020               	movlb	0	; select bank0
  2348  016E  01DC               	clrf	_CountCallBack	;volatile
  2349  016F  01DD               	clrf	_CountCallBack+1	;volatile
  2350  0170                     i1l964:	
  2351                           ;mcc_generated_files/tmr0.c: 87:     }
  2352                           
  2353                           
  2354                           ;mcc_generated_files/tmr0.c: 89:     Count_sec++;
  2355  0170  3001               	movlw	1
  2356  0171  07DA               	addwf	_Count_sec,f	;volatile
  2357  0172  3000               	movlw	0
  2358  0173  3DDB               	addwfc	_Count_sec+1,f	;volatile
  2359                           
  2360                           ;mcc_generated_files/tmr0.c: 90:     CountCallBack++;
  2361  0174  3001               	movlw	1
  2362  0175  07DC               	addwf	_CountCallBack,f	;volatile
  2363  0176  3000               	movlw	0
  2364  0177  3DDD               	addwfc	_CountCallBack+1,f	;volatile
  2365  0178  0008               	return
  2366  0179                     __end_of_TMR0_ISR:	
  2367                           
  2368                           	psect	text11
  2369  01A9                     __ptext11:	
  2370 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2371 ;; Defined at:
  2372 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1
  2386 ;;      Params:         0       0       0
  2387 ;;      Locals:         0       0       0
  2388 ;;      Temps:          0       0       0
  2389 ;;      Totals:         0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_TMR0_ISR
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _TMR0_DefaultInterruptHandler
  2401  01A9                     _TMR0_DefaultInterruptHandler:	
  2402                           
  2403                           ;mcc_generated_files/tmr0.c: 95:     if(guc_buzz_state==1)
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  2407  01A9  0379               	decf	_guc_buzz_state,w	;volatile
  2408  01AA  1D03               	btfss	3,2
  2409  01AB  29B8               	goto	i1l44
  2410                           
  2411                           ;mcc_generated_files/tmr0.c: 96:      {;mcc_generated_files/tmr0.c: 97:         do { LAT
      +                          Abits.LATA2 = ~LATAbits.LATA2; } while(0);
  2412  01AC  1003               	clrc
  2413  01AD  0022               	movlb	2	; select bank2
  2414  01AE  1D0C               	btfss	12,2	;volatile
  2415  01AF  1403               	setc
  2416  01B0  1C03               	btfss	3,0
  2417  01B1  29B5               	goto	u76_20
  2418  01B2  0022               	movlb	2	; select bank2
  2419  01B3  150C               	bsf	12,2	;volatile
  2420  01B4  0008               	return
  2421  01B5                     u76_20:	
  2422  01B5  0022               	movlb	2	; select bank2
  2423  01B6  110C               	bcf	12,2	;volatile
  2424                           
  2425                           ;mcc_generated_files/tmr0.c: 98:      }
  2426  01B7  0008               	return
  2427  01B8                     i1l44:	
  2428                           ;mcc_generated_files/tmr0.c: 101:      {;mcc_generated_files/tmr0.c: 102:        do { LA
      +                          TAbits.LATA2 = 0; } while(0);
  2429                           
  2430                           ;mcc_generated_files/tmr0.c: 100:      else
  2431                           
  2432  01B8  0022               	movlb	2	; select bank2
  2433  01B9  110C               	bcf	12,2	;volatile
  2434  01BA  0008               	return
  2435  01BB                     __end_of_TMR0_DefaultInterruptHandler:	
  2436                           ;mcc_generated_files/tmr0.c: 103:      }
  2437                           
  2438  007E                     btemp	set	126	;btemp
  2439  007E                     int$flags	set	126
  2440  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         72
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0      69
    BANK1            32      0       0

Pointer List with Targets:

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _check_cond->_CHCK_COND
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     246
                                              4 COMMON     2     2      0
                  _SYSTEM_Initialize
                         _check_cond
                           _exe_cond
 ---------------------------------------------------------------------------------
 (1) _exe_cond                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _check_cond                                           0     0      0     178
                          _CHCK_COND
 ---------------------------------------------------------------------------------
 (2) _CHCK_COND                                            4     4      0     178
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
       _TMR0_DefaultInterruptHandler
 ---------------------------------------------------------------------------------
 (5) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _check_cond
     _CHCK_COND
   _exe_cond

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_DefaultInterruptHandler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 16 22:11:30 2018

                          __CFG_CP$OFF 0000                     __size_of_CHCK_COND 003A  
                      _timer0ReloadVal 0064                            __CFG_LVP$ON 0000  
                                  l200 0085                                    l201 0084  
                                  l118 018E                                    l151 00AB  
                                  l161 00D3                                    l153 00B3  
                                  l171 00FB                                    l163 00DB  
                                  l155 00BB                                    l165 00E3  
                                  l157 00C3                                    l149 00A3  
                                  l190 0068                                    l182 0052  
                                  l167 00EB                                    l159 00CB  
                                  l191 0067                                    l184 004F  
                                  l169 00F3                                    l196 008F  
                                  l189 0064                                    l199 0081  
                                  l942 0126                                    l934 0113  
                                  l938 011E                           __CFG_BORV$LO 0000  
                                  wreg 0009                                   l1130 0078  
                                 l1114 005B                                   l1140 0090  
                                 l1124 0071                                   l1108 0054  
                                 l1138 008D                                   l1090 002E  
                                 l1170 018F                                   l1092 002F  
                                 l1164 017F                                   l1078 0103  
                                 l1088 0029                                   l1176 0194  
                                 _LATA 010C                                   _LATC 010E  
                                 i1l34 0165                                   i1l44 01B8  
                                 i1l56 000A                                   _TMR0 0015  
                                 _WPUA 020C                           __CFG_WRT$OFF 0000  
                                 _main 0179                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                        __CFG_BOREN$ON 0000                                   start 000C  
                        __CFG_MCLRE$ON 0000                __end_of_TMR0_Initialize 01CA  
       ??_TMR0_DefaultInterruptHandler 0070         __size_of_OSCILLATOR_Initialize 0006  
        __end_of_OSCILLATOR_Initialize 01D6                                  ?_main 0070  
                                i1l964 0170                                  i1l958 0163  
                                _TRISA 008C                                  _TRISC 008E  
                                u76_20 01B5                       __end_of_TMR0_ISR 0179  
                       _WDT_Initialize 01DB                      __end_of_CHCK_COND 0141  
                                status 0003                                  wtemp0 007E  
                      __initialization 000D                           __end_of_main 0197  
                       __CFG_LPBOR$OFF 0000            ?_INTERRUPT_InterruptManager 0070  
                               ??_main 0074                 __end_of_WDT_Initialize 01DF  
                               _APFCON 011D                                 _ANSELA 018C  
                               _ANSELC 018E                                 _BORCON 0116  
                               _OSCCON 0099                                 _WDTCON 0097  
                       __CFG_PWRTE$OFF 0000                         __CFG_STVREN$ON 0000  
                     __end_of_exe_cond 0099                       ?_TMR0_Initialize 0070  
                      ?_WDT_Initialize 0070                      _SYSTEM_Initialize 01D6  
              __end_of__initialization 0017                     ?_SYSTEM_Initialize 0070  
                       __pcstackCOMMON 0070                    ??_SYSTEM_Initialize 0071  
                            ?_TMR0_ISR 0070                         _OPTION_REGbits 0095  
            __end_of_SYSTEM_Initialize 01DB                             __pbssBANK0 0020  
                           _check_cond 0099                             __pmaintext 0179  
                           ??_TMR0_ISR 0070                             __pintentry 0004  
                           CHCK_COND@i 0072                             CHCK_COND@x 0073  
                       _guc_buzz_state 0079                              ?_exe_cond 0070  
                           _guc_choice 0078                              _CHCK_COND 0107  
                              __ptext1 001A                                __ptext2 0099  
                              __ptext3 0107                                __ptext4 01D6  
                              __ptext5 01DB                                __ptext6 01BB  
                              __ptext7 0197                                __ptext8 01D0  
                              _guc_deb 0020                                _guc_min 0060  
                              _guc_sec 0076                  _OSCILLATOR_Initialize 01D0  
                              _one_sec 0062               ??_PIN_MANAGER_Initialize 0070  
                              main@cnt 0075             __size_of_SYSTEM_Initialize 0005  
                              clrloop0 01CB                   end_of_initialization 0017  
                          ?_check_cond 0070                             ??_exe_cond 0070  
                           ?_CHCK_COND 0070                       ??_WDT_Initialize 0070  
                            _PORTAbits 000C                              _PORTCbits 000E  
                     __CFG_FOSC$INTOSC 0000                      __size_of_TMR0_ISR 0038  
                  __size_of_check_cond 006E                 ?_OSCILLATOR_Initialize 0070  
                            _Count_sec 005A                    start_initialization 000D  
             __size_of_TMR0_Initialize 000F        __size_of_PIN_MANAGER_Initialize 0012  
                          ??_CHCK_COND 0070                            __pbssCOMMON 0076  
                            ___latbits 0000                  _TMR0_InterruptHandler 0058  
                            __pnvBANK0 0064                      __size_of_exe_cond 007F  
               _PIN_MANAGER_Initialize 0197                              _demo_time 005E  
         ??_INTERRUPT_InterruptManager 0070                              _guc_cycle 003E  
                     __CFG_WDTE$SWDTEN 0000                           ??_check_cond 0074  
                    ??_TMR0_Initialize 0070                               _LATAbits 010C  
                            clear_ram0 01CA    __size_of_INTERRUPT_InterruptManager 0008  
                             _TMR0_ISR 0141                     __end_of_check_cond 0107  
              ??_OSCILLATOR_Initialize 0070                               __ptext10 0141  
                             __ptext11 01A9                               _exe_cond 001A  
                        __size_of_main 001E   __end_of_TMR0_DefaultInterruptHandler 01BB  
__size_of_TMR0_DefaultInterruptHandler 0012           _TMR0_DefaultInterruptHandler 01A9  
                             int$flags 007E     __end_of_INTERRUPT_InterruptManager 000C  
           _INTERRUPT_InterruptManager 0004                             _INTCONbits 000B  
              __size_of_WDT_Initialize 0004                               intlevel1 0000  
                        _CountCallBack 005C                ?_PIN_MANAGER_Initialize 0070  
                    __CFG_CLKOUTEN$OFF 0000          ?_TMR0_DefaultInterruptHandler 0070  
                           _OPTION_REG 0095                        _TMR0_Initialize 01BB  
       __end_of_PIN_MANAGER_Initialize 01A9  
