;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 04-Nov-17 6:32:30 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28B9      	GOTO       185
_TMR0_CallBack_one_Sec:
;tmr0.c,55 :: 		void TMR0_CallBack_one_Sec(void)
;tmr0.c,58 :: 		}
L_end_TMR0_CallBack_one_Sec:
0x0003	0x0008      	RETURN
; end of _TMR0_CallBack_one_Sec
_interrupt:
;one_mhz.c,14 :: 		void interrupt()
0x0004	0x0870      	MOVF       R0, 0
0x0005	0x0020      	MOVLB      0
0x0006	0x00A1      	MOVWF      33
0x0007	0x0871      	MOVF       R1, 0
0x0008	0x00A0      	MOVWF      32
;one_mhz.c,16 :: 		if(TMR0IE_bit == 1 && TMR0IF_bit == 1)   /* interrupt handler*/
0x0009	0x3180      	MOVLP      0
0x000A	0x1E8B      	BTFSS      TMR0IE_bit, BitPos(TMR0IE_bit+0)
0x000B	0x2810      	GOTO       L_interrupt2
0x000C	0x1D0B      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x000D	0x2810      	GOTO       L_interrupt2
L__interrupt27:
;one_mhz.c,18 :: 		TMR0_ISR();
0x000E	0x2066      	CALL       _TMR0_ISR
;one_mhz.c,19 :: 		}
0x000F	0x2810      	GOTO       L_interrupt3
L_interrupt2:
;one_mhz.c,22 :: 		}
L_interrupt3:
;one_mhz.c,23 :: 		}
L_end_interrupt:
L__interrupt29:
0x0010	0x0821      	MOVF       33, 0
0x0011	0x00F0      	MOVWF      R0
0x0012	0x0820      	MOVF       32, 0
0x0013	0x00F1      	MOVWF      R1
0x0014	0x0009      	RETFIE     %s
; end of _interrupt
_TMR2_StartTimer:
;tmr2.c,14 :: 		void TMR2_StartTimer(void)
;tmr2.c,16 :: 		TMR2ON_bit = 1;   /* Start the Timer by writing to TMRxON bit*/
0x0015	0x0020      	MOVLB      0
0x0016	0x151C      	BSF        TMR2ON_bit, BitPos(TMR2ON_bit+0)
;tmr2.c,17 :: 		}
L_end_TMR2_StartTimer:
0x0017	0x0008      	RETURN
; end of _TMR2_StartTimer
_PWM3_Initialize:
;pwm3.c,3 :: 		void PWM3_Initialize(void)
;pwm3.c,5 :: 		TRISA=0x00;
0x0018	0x0021      	MOVLB      1
0x0019	0x018C      	CLRF       TRISA
;pwm3.c,6 :: 		PWM3CON = 0xD0;
0x001A	0x30D0      	MOVLW      208
0x001B	0x002C      	MOVLB      12
0x001C	0x0099      	MOVWF      PWM3CON
;pwm3.c,7 :: 		PWM3DCH = 0x01;
0x001D	0x3001      	MOVLW      1
0x001E	0x0098      	MOVWF      PWM3DCH
;pwm3.c,8 :: 		PWM3DCL = 0x40;
0x001F	0x3040      	MOVLW      64
0x0020	0x0097      	MOVWF      PWM3DCL
;pwm3.c,9 :: 		}
L_end_PWM3_Initialize:
0x0021	0x0008      	RETURN
; end of _PWM3_Initialize
_TMR2_Initialize:
;tmr2.c,5 :: 		void TMR2_Initialize(void)
;tmr2.c,7 :: 		T2CON = 0x00; //0x00;    /* T2CKPS 1:4; T2OUTPS 1:1; TMR2ON off*/
0x0022	0x0020      	MOVLB      0
0x0023	0x019C      	CLRF       T2CON
;tmr2.c,8 :: 		PR2 = 0x02; //0x03;      /* PR2 29;*/
0x0024	0x3002      	MOVLW      2
0x0025	0x009B      	MOVWF      PR2
;tmr2.c,9 :: 		TMR2 = 0x00;     /* TMR2 0; */
0x0026	0x019A      	CLRF       TMR2
;tmr2.c,10 :: 		TMR2IF_bit = 0;    /* Clearing IF flag. */
0x0027	0x1091      	BCF        TMR2IF_bit, BitPos(TMR2IF_bit+0)
;tmr2.c,11 :: 		TMR2_StartTimer();     /*Start TMR2 */
0x0028	0x2015      	CALL       _TMR2_StartTimer
;tmr2.c,12 :: 		}
L_end_TMR2_Initialize:
0x0029	0x0008      	RETURN
; end of _TMR2_Initialize
_exe_cond:
;one_mhz.c,25 :: 		void exe_cond()
;one_mhz.c,27 :: 		RELAY = 1;
0x002A	0x0020      	MOVLB      0
0x002B	0x160E      	BSF        PORTC, 4
;one_mhz.c,28 :: 		while(Set_Time<guc_min);
L_exe_cond4:
0x002C	0x0825      	MOVF       _guc_min+1, 0
0x002D	0x022E      	SUBWF      _Set_Time+1, 0
0x002E	0x1D03      	BTFSS      STATUS, 2
0x002F	0x2832      	GOTO       L__exe_cond31
0x0030	0x0824      	MOVF       _guc_min, 0
0x0031	0x022D      	SUBWF      _Set_Time, 0
L__exe_cond31:
0x0032	0x1803      	BTFSC      STATUS, 0
0x0033	0x2835      	GOTO       L_exe_cond5
0x0034	0x282C      	GOTO       L_exe_cond4
L_exe_cond5:
;one_mhz.c,29 :: 		RELAY = 0;
0x0035	0x120E      	BCF        PORTC, 4
;one_mhz.c,30 :: 		}
L_end_exe_cond:
0x0036	0x0008      	RETURN
; end of _exe_cond
_TMR0_Reload:
;tmr0.c,21 :: 		void TMR0_Reload(void)
;tmr0.c,23 :: 		TMR0 = timer0ReloadVal;     /* Write to the Timer0 register*/
0x0037	0x0020      	MOVLB      0
0x0038	0x0826      	MOVF       _timer0ReloadVal, 0
0x0039	0x0095      	MOVWF      TMR0
;tmr0.c,24 :: 		}
L_end_TMR0_Reload:
0x003A	0x0008      	RETURN
; end of _TMR0_Reload
_TMR0_CallBack_one_Min:
;tmr0.c,50 :: 		void TMR0_CallBack_one_Min(void)
;tmr0.c,53 :: 		}
L_end_TMR0_CallBack_one_Min:
0x003B	0x0008      	RETURN
; end of _TMR0_CallBack_one_Min
_check_cond:
;one_mhz.c,33 :: 		void check_cond()
;one_mhz.c,35 :: 		if(!DEC)
0x003C	0x0020      	MOVLB      0
0x003D	0x188E      	BTFSC      PORTC, 1
0x003E	0x284D      	GOTO       L_check_cond6
;one_mhz.c,37 :: 		Set_Time--;
0x003F	0x3001      	MOVLW      1
0x0040	0x022D      	SUBWF      _Set_Time, 0
0x0041	0x00F0      	MOVWF      R0
0x0042	0x3000      	MOVLW      0
0x0043	0x3B2E      	SUBWFB     _Set_Time+1, 0
0x0044	0x00F1      	MOVWF      R1
0x0045	0x0870      	MOVF       R0, 0
0x0046	0x00AD      	MOVWF      _Set_Time
0x0047	0x0871      	MOVF       R1, 0
0x0048	0x00AE      	MOVWF      _Set_Time+1
;one_mhz.c,38 :: 		while(!DEC);
L_check_cond7:
0x0049	0x188E      	BTFSC      PORTC, 1
0x004A	0x284C      	GOTO       L_check_cond8
0x004B	0x2849      	GOTO       L_check_cond7
L_check_cond8:
;one_mhz.c,39 :: 		}
0x004C	0x2865      	GOTO       L_check_cond9
L_check_cond6:
;one_mhz.c,40 :: 		else if(!INC)
0x004D	0x180E      	BTFSC      PORTC, 0
0x004E	0x285D      	GOTO       L_check_cond10
;one_mhz.c,42 :: 		Set_Time++;
0x004F	0x3001      	MOVLW      1
0x0050	0x072D      	ADDWF      _Set_Time, 0
0x0051	0x00F0      	MOVWF      R0
0x0052	0x3000      	MOVLW      0
0x0053	0x3D2E      	ADDWFC     _Set_Time+1, 0
0x0054	0x00F1      	MOVWF      R1
0x0055	0x0870      	MOVF       R0, 0
0x0056	0x00AD      	MOVWF      _Set_Time
0x0057	0x0871      	MOVF       R1, 0
0x0058	0x00AE      	MOVWF      _Set_Time+1
;one_mhz.c,43 :: 		while(!INC);
L_check_cond11:
0x0059	0x180E      	BTFSC      PORTC, 0
0x005A	0x285C      	GOTO       L_check_cond12
0x005B	0x2859      	GOTO       L_check_cond11
L_check_cond12:
;one_mhz.c,44 :: 		}
0x005C	0x2865      	GOTO       L_check_cond13
L_check_cond10:
;one_mhz.c,45 :: 		else if(!START)
0x005D	0x190E      	BTFSC      PORTC, 2
0x005E	0x2865      	GOTO       L_check_cond14
;one_mhz.c,47 :: 		guc_min = 0;
0x005F	0x01A4      	CLRF       _guc_min
0x0060	0x01A5      	CLRF       _guc_min+1
;one_mhz.c,48 :: 		exe_cond();
0x0061	0x202A      	CALL       _exe_cond
;one_mhz.c,49 :: 		while(!START);
L_check_cond15:
0x0062	0x190E      	BTFSC      PORTC, 2
0x0063	0x2865      	GOTO       L_check_cond16
0x0064	0x2862      	GOTO       L_check_cond15
L_check_cond16:
;one_mhz.c,50 :: 		}
L_check_cond14:
L_check_cond13:
L_check_cond9:
;one_mhz.c,51 :: 		}
L_end_check_cond:
0x0065	0x0008      	RETURN
; end of _check_cond
_TMR0_ISR:
;tmr0.c,26 :: 		void TMR0_ISR(void)
;tmr0.c,28 :: 		TMR0_Reload();
0x0066	0x2037      	CALL       _TMR0_Reload
;tmr0.c,29 :: 		asm CLRWDT ;
0x0067	0x0064      	CLRWDT
;tmr0.c,30 :: 		if(one_sec>1024)           /*Timer for 1 sec*/
0x0068	0x0828      	MOVF       _one_sec+1, 0
0x0069	0x3C04      	SUBLW      4
0x006A	0x1D03      	BTFSS      STATUS, 2
0x006B	0x286E      	GOTO       L__TMR0_ISR5
0x006C	0x0827      	MOVF       _one_sec, 0
0x006D	0x3C00      	SUBLW      0
L__TMR0_ISR5:
0x006E	0x1803      	BTFSC      STATUS, 0
0x006F	0x2890      	GOTO       L_TMR0_ISR0
;tmr0.c,32 :: 		one_sec=0;
0x0070	0x01A7      	CLRF       _one_sec
0x0071	0x01A8      	CLRF       _one_sec+1
;tmr0.c,33 :: 		guc_sec++;
0x0072	0x0A22      	INCF       _guc_sec, 0
0x0073	0x00F0      	MOVWF      R0
0x0074	0x0870      	MOVF       R0, 0
0x0075	0x00A2      	MOVWF      _guc_sec
;tmr0.c,34 :: 		one_min++;
0x0076	0x3001      	MOVLW      1
0x0077	0x0729      	ADDWF      _one_min, 0
0x0078	0x00F0      	MOVWF      R0
0x0079	0x3000      	MOVLW      0
0x007A	0x3D2A      	ADDWFC     _one_min+1, 0
0x007B	0x00F1      	MOVWF      R1
0x007C	0x0870      	MOVF       R0, 0
0x007D	0x00A9      	MOVWF      _one_min
0x007E	0x0871      	MOVF       R1, 0
0x007F	0x00AA      	MOVWF      _one_min+1
;tmr0.c,35 :: 		TMR0_CallBack_one_Sec();
0x0080	0x2003      	CALL       _TMR0_CallBack_one_Sec
;tmr0.c,36 :: 		if(one_min>60)
0x0081	0x082A      	MOVF       _one_min+1, 0
0x0082	0x3C00      	SUBLW      0
0x0083	0x1D03      	BTFSS      STATUS, 2
0x0084	0x2887      	GOTO       L__TMR0_ISR6
0x0085	0x0829      	MOVF       _one_min, 0
0x0086	0x3C3C      	SUBLW      60
L__TMR0_ISR6:
0x0087	0x1803      	BTFSC      STATUS, 0
0x0088	0x2890      	GOTO       L_TMR0_ISR1
;tmr0.c,38 :: 		one_min = 0;
0x0089	0x01A9      	CLRF       _one_min
0x008A	0x01AA      	CLRF       _one_min+1
;tmr0.c,39 :: 		guc_min++;
0x008B	0x0A24      	INCF       _guc_min, 0
0x008C	0x00F0      	MOVWF      R0
0x008D	0x0870      	MOVF       R0, 0
0x008E	0x00A4      	MOVWF      _guc_min
;tmr0.c,40 :: 		TMR0_CallBack_one_Min();
0x008F	0x203B      	CALL       _TMR0_CallBack_one_Min
;tmr0.c,44 :: 		}
L_TMR0_ISR1:
;tmr0.c,45 :: 		}
L_TMR0_ISR0:
;tmr0.c,46 :: 		one_sec++;
0x0090	0x3001      	MOVLW      1
0x0091	0x0727      	ADDWF      _one_sec, 0
0x0092	0x00F0      	MOVWF      R0
0x0093	0x3000      	MOVLW      0
0x0094	0x3D28      	ADDWFC     _one_sec+1, 0
0x0095	0x00F1      	MOVWF      R1
0x0096	0x0870      	MOVF       R0, 0
0x0097	0x00A7      	MOVWF      _one_sec
0x0098	0x0871      	MOVF       R1, 0
0x0099	0x00A8      	MOVWF      _one_sec+1
;tmr0.c,47 :: 		TMR0IF_bit = 0;            /*Clear the TMR0 interrupt flag8*/
0x009A	0x110B      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;tmr0.c,48 :: 		}
L_end_TMR0_ISR:
0x009B	0x0008      	RETURN
; end of _TMR0_ISR
_sys_init:
;one_mhz.c,93 :: 		void sys_init()
;one_mhz.c,96 :: 		OSCCON = 0x7A;   /* SCS INTOSC; SPLLEN disabled; IRCF 16MHz_HF; */
0x009C	0x307A      	MOVLW      122
0x009D	0x0021      	MOVLB      1
0x009E	0x0099      	MOVWF      OSCCON
;one_mhz.c,97 :: 		ANSELA=0x00;
0x009F	0x0023      	MOVLB      3
0x00A0	0x018C      	CLRF       ANSELA
;one_mhz.c,98 :: 		ANSELC=0x00;
0x00A1	0x018E      	CLRF       ANSELC
;one_mhz.c,99 :: 		TRISA=0x00;
0x00A2	0x0021      	MOVLB      1
0x00A3	0x018C      	CLRF       TRISA
;one_mhz.c,100 :: 		TRISC=0x2F;
0x00A4	0x302F      	MOVLW      47
0x00A5	0x008E      	MOVWF      TRISC
;one_mhz.c,101 :: 		RELAY = 0;
0x00A6	0x0020      	MOVLB      0
0x00A7	0x120E      	BCF        PORTC, 4
;one_mhz.c,104 :: 		WDTCON = 0x16;   /*WDTPS 1:65536; SWDTEN OFF; */
0x00A8	0x3016      	MOVLW      22
0x00A9	0x0021      	MOVLB      1
0x00AA	0x0097      	MOVWF      WDTCON
;one_mhz.c,107 :: 		TMR2_Initialize();
0x00AB	0x2022      	CALL       _TMR2_Initialize
;one_mhz.c,108 :: 		PWM3_Initialize();
0x00AC	0x2018      	CALL       _PWM3_Initialize
;one_mhz.c,110 :: 		GIE_bit = 1;     /* Enable INTs  */
0x00AD	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;one_mhz.c,111 :: 		while(1);
L_sys_init23:
0x00AE	0x28AE      	GOTO       L_sys_init23
;one_mhz.c,112 :: 		}
L_end_sys_init:
0x00AF	0x0008      	RETURN
; end of _sys_init
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x00B0	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x00B1	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x00B2	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x00B3	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x00B4	0x28B0      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x00B5	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x00B6	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x00B7	0x28B0      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x00B8	0x0008      	RETURN
; end of ___CC2DW
_main:
0x00B9	0x0020      	MOVLB      0
0x00BA	0x01A2      	CLRF       _guc_sec
0x00BB	0x01A3      	CLRF       35
0x00BC	0x01A4      	CLRF       _guc_min
0x00BD	0x01A5      	CLRF       37
;one_mhz.c,114 :: 		void main()
;one_mhz.c,116 :: 		sys_init();
0x00BE	0x209C      	CALL       _sys_init
;one_mhz.c,117 :: 		On_Time = DEFAULT_TME;
0x00BF	0x300A      	MOVLW      10
0x00C0	0x0020      	MOVLB      0
0x00C1	0x00AB      	MOVWF      _On_Time
0x00C2	0x3000      	MOVLW      0
0x00C3	0x00AC      	MOVWF      _On_Time+1
;one_mhz.c,118 :: 		RELAY = 0;
0x00C4	0x120E      	BCF        PORTC, 4
;one_mhz.c,119 :: 		while(1)
L_main25:
;one_mhz.c,121 :: 		check_cond();                 /*Check the condition*/
0x00C5	0x203C      	CALL       _check_cond
;one_mhz.c,126 :: 		}
0x00C6	0x28C5      	GOTO       L_main25
;one_mhz.c,127 :: 		}
L_end_main:
0x00C7	0x28C7      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [1]    _TMR0_CallBack_one_Sec
0x0004      [17]    _interrupt
0x0015       [3]    _TMR2_StartTimer
0x0018      [10]    _PWM3_Initialize
0x0022       [8]    _TMR2_Initialize
0x002A      [13]    _exe_cond
0x0037       [4]    _TMR0_Reload
0x003B       [1]    _TMR0_CallBack_one_Min
0x003C      [42]    _check_cond
0x0066      [54]    _TMR0_ISR
0x009C      [20]    _sys_init
0x00B0       [9]    ___CC2DW
0x00B9      [15]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    TMR0IF_bit
0x000E       [1]    PORTC
0x0011       [0]    TMR2IF_bit
0x0015       [1]    TMR0
0x001A       [1]    TMR2
0x001B       [1]    PR2
0x001C       [0]    TMR2ON_bit
0x001C       [1]    T2CON
0x0022       [2]    _guc_sec
0x0024       [2]    _guc_min
0x0026       [1]    _timer0ReloadVal
0x0027       [2]    _one_sec
0x0029       [2]    _one_min
0x002B       [2]    _On_Time
0x002D       [2]    _Set_Time
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [1]    TRISA
0x008E       [1]    TRISC
0x0097       [1]    WDTCON
0x0099       [1]    OSCCON
0x018C       [1]    ANSELA
0x018E       [1]    ANSELC
0x0617       [1]    PWM3DCL
0x0618       [1]    PWM3DCH
0x0619       [1]    PWM3CON
